{"remainingRequest":"/Users/jacobfrandsen/Desktop/Code/CS_260/pokedex/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jacobfrandsen/Desktop/Code/CS_260/pokedex/front-end/src/views/Guess.vue?vue&type=style&index=0&id=1e77308d&scoped=true&lang=css&","dependencies":[{"path":"/Users/jacobfrandsen/Desktop/Code/CS_260/pokedex/front-end/src/views/Guess.vue","mtime":1649913898634},{"path":"/Users/jacobfrandsen/Desktop/Code/CS_260/pokedex/front-end/node_modules/css-loader/dist/cjs.js","mtime":1649801571850},{"path":"/Users/jacobfrandsen/Desktop/Code/CS_260/pokedex/front-end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1649801571995},{"path":"/Users/jacobfrandsen/Desktop/Code/CS_260/pokedex/front-end/node_modules/postcss-loader/src/index.js","mtime":1586831826000},{"path":"/Users/jacobfrandsen/Desktop/Code/CS_260/pokedex/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1586831826000},{"path":"/Users/jacobfrandsen/Desktop/Code/CS_260/pokedex/front-end/node_modules/vue-loader/lib/index.js","mtime":1649801571930}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmltYWdlIGgyIHsKICBmb250LXN0eWxlOiBpdGFsaWM7Cn0KCi8qIE1hc29ucnkgKi8KKiwKKjpiZWZvcmUsCio6YWZ0ZXIgewogIGJveC1zaXppbmc6IGluaGVyaXQ7Cn0KCi5pbWFnZS1nYWxsZXJ5IHsKICBjb2x1bW4tZ2FwOiAxLjVlbTsKfQoKLmltYWdlIHsKICBtYXJnaW46IDAgMCAxLjVlbTsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgd2lkdGg6IDEwMCU7Cn0KCi5pbWFnZSBpbWcgewogIHdpZHRoOiAxMDAlOwp9CgovKiBNYXNvbnJ5IG9uIGxhcmdlIHNjcmVlbnMgKi8KQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI0cHgpIHsKICAuaW1hZ2UtZ2FsbGVyeSB7CiAgICBjb2x1bW4tY291bnQ6IDQ7CiAgfQp9CgovKiBNYXNvbnJ5IG9uIG1lZGl1bS1zaXplZCBzY3JlZW5zICovCkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyM3B4KSBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHsKICAuaW1hZ2UtZ2FsbGVyeSB7CiAgICBjb2x1bW4tY291bnQ6IDM7CiAgfQp9CgovKiBNYXNvbnJ5IG9uIHNtYWxsIHNjcmVlbnMgKi8KQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkgYW5kIChtaW4td2lkdGg6IDU0MHB4KSB7CiAgLmltYWdlLWdhbGxlcnkgewogICAgY29sdW1uLWNvdW50OiAyOwogIH0KfQo="},{"version":3,"sources":["Guess.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Guess.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div class=\"home\">\n  <section class=\"image-gallery\">\n    <div class=\"image\">\n      \n      <img :src=\"item.path\" />\n        \n    </div>\n    <form @submit.prevent=\"submit\">\n        <input type=\"text\" v-model=\"name\"> \n         <button type=\"submit\">\n            Guess Name\n        </button>\n    </form>\n    <p style=\"white-space: pre-line;\">{{ name }}</p>\n  </section>\n</div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport axios from 'axios';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n     item: null,\n     title: \"\",\n    name: \"\"\n\n    }\n  },\n  created() {\n    this.getItem();\n    this.checkName();\n  },\n  methods: {\n    async getItem() {\n      try {\n        let response = await axios.get(\"/api/items\");\n        this.item = response.data.at(0);\n        return true;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async checkName() {\n      try {\n        if (this.item.title == this.title)\n            return true;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    submit(){\n        axios.post('/your-url', {name: this.name})\n        try {\n            // if (this.item.title == this.title)\n            //     return true;\n        } catch (error) {\n            console.log(error);\n        }\n      },\n  },\n}\n</script>\n\n\n<style scoped>\n.image h2 {\n  font-style: italic;\n}\n\n/* Masonry */\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n}\n\n.image-gallery {\n  column-gap: 1.5em;\n}\n\n.image {\n  margin: 0 0 1.5em;\n  display: inline-block;\n  width: 100%;\n}\n\n.image img {\n  width: 100%;\n}\n\n/* Masonry on large screens */\n@media only screen and (min-width: 1024px) {\n  .image-gallery {\n    column-count: 4;\n  }\n}\n\n/* Masonry on medium-sized screens */\n@media only screen and (max-width: 1023px) and (min-width: 768px) {\n  .image-gallery {\n    column-count: 3;\n  }\n}\n\n/* Masonry on small screens */\n@media only screen and (max-width: 767px) and (min-width: 540px) {\n  .image-gallery {\n    column-count: 2;\n  }\n}\n</style>"]}]}